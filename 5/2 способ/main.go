package main

import (
	"fmt"
	"time"
)

func main() {
	// Указываем количество воркеров
	var n time.Duration
	fmt.Print("Введите количество секунд на работу программы: ")
	fmt.Scan(&n)

	// Создаем канал для передачи значений
	channel := make(chan int)

	// Запускаем горутину, которая будет отправлять значения в канал
	go func() {
		// Даём инструкцию закрыть указанный канал после выполнения всех операций внутри функции
		defer close(channel)

		// Отправляем значения в канал
		for i := 1; ; i++ {
			channel <- i

			// Задержка 1 секунда перед отправкой следующего значения (закомментировать для создания большого потока данных)
			//time.Sleep(time.Second)
		}
	}()

	// Запускаем горутину, которая будет читать значения из канала
	go func() {
		// Читаем значения из канала до его закрытия
		for value := range channel {
			fmt.Println("Прочитано значение из канала:", value)
		}
	}()

	// Ждем N секунд
	time.Sleep(n * time.Second)

	fmt.Printf("Программа завершена по истечению %d секунд.", n)
}
