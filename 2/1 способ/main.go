package main

import (
	"fmt"
	"sync"
)

// Вычисление квадрата числа с применением горутин
func calculateSquare(wg *sync.WaitGroup, num int) {
	// Это своего рода сигнал, что элемент группы завершил свое выполнение, и уменьшение внутреннего счетчика активных элементов на единицу
	defer wg.Done()

	// Вычисляем квадрат числа и выводим результат на экран
	square := num * num
	fmt.Printf("Квадрат числа %d равен: %d\n", num, square)
}

func main() {
	// Создаём требуемый массив чисел
	numbers := []int{2, 4, 6, 8, 10}

	// Определяем группу горутин и из скольких элементов она будет состоять
	var wg sync.WaitGroup
	wg.Add(len(numbers))

	// Для каждого числа из массива вызываем функцию в отдельной горутине
	for _, num := range numbers {
		go calculateSquare(&wg, num)
	}

	// Ожидаем завершения выполнения всей группы горутин
	wg.Wait()
}
